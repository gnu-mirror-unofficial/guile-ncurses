The README file for GNU Guile-Ncurses

  Copyright (C) 2009, 2010, 2011, 2014, 2016, 2019 Free Software Foundation, Inc.

  Copying and distribution of this file, with or without modification,
  are permitted in any medium without royalty provided the copyright
  notice and this notice are preserved.

This is GNU Guile-Ncurses v3.0.  It provides functionality to allow
programs written in the GNU Guile interpreter of the Scheme
programming language to interact with character screens in a
terminal-independent manner.  It is a wrapper to the underlying
ncurses library.

This library can be found at https://www.gnu.org/software/guile-ncurses/

It provides bindings for most of the ncurses ecosystem. The base
ncurses library is for creating simple text applications. The
panels library adds the idea of overlapping panels.  The menu library
add widgets for selecting from a list.  The forms library adds widgets
for creating more complex text entry.

It also provides some bindings for the low-level termios library, which
is for manipulating the characteristics of terminal interfaces.

Depending on how it is compiled, Guile-Ncurses will use either the
"narrow" versions of the ncurses libraries, which only handles 8-bit
locales like ASCII or Latin1, or the "wide" version of the ncurses
libraries, which can handle UTF-8 locales.

A version of Guile >= 2.2.4 and a version of Ncurses >= 6.0 is
preferred. Earlier releases of Guile or Ncurses have not been tested.

For more information on the current state of the build on Cygwin,
MinGW or Openbsd, see README.cygwin or README.mingw or README.openbsd
respectively.

This distribution has the following subdirectories:
- src: the source code for the library
- test: test scripts to verify that the library functions correctly
- doc: documentation for the library source to generate it
- build_aux: files used by the configuration and building programs
- m4: more files used by the configuration process
- tools: some executable programs that might be useful

INSTALLATION

basically, to build and install this on GNU/Linux or MinGW do

  ./configure
  make
  make install

On BSD-like systems it is more like

  ./configure CPPFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib
  make
  make install

For a basic explanation of the installation of any GNU-like package,
see the INSTALL file.

The INSTALL files says, in brief, that a supplied program called
"configure" needs to be run before "make".  This configure program
runs many tests of the compiler and the libraries to determine how to
build the program.

Most of the flags and options in the configure program are generic to
all configure scripts.  All those options like "--disable-rpath" or
"--enable-fast-install"... to be honest I've never used them, and I
don't really know what they do.

But there are some configure flags that are unique to Guile-Ncurses
that you need to get correct.

--with-gnu-filesystem-hierarchy: this flag will make sure that the
       libraries and scheme files for this program get installed in
       the proper locations according to the GNU filesystem hierarchy.
       In practice, this means that they will usually get install under
       /usr/local.

       The problem is that Guile is usually compiled to only search
       for libraries under the /usr directory, so following the GNU
       filesystem hierarchy usually results in an install that doesn't
       work out of the box.  It requires setting environmental
       variables such as GNU_LOAD_PATH.  Thus, you probably shouldn't
       set the flag under normal circumstances.

--without-ncursesw: this flag will build a version of Guile-Ncurses
       that is for 8-bit locales only, such as ASCII or Latin1.
       Normally, the default is to build the UTF-8 version. You
       probably shouldn't use this flag under normal circumstances.

--disable-termios: this flag will prevent the low-level termios
       library functions from being included in the library. These
       functions are rather obscure and are not necessary for writing
       ncurses applications.

--enable-demo-install: there are a couple of sample programs
       "posix-explorer" and "ncurses-keyboard-test".  If you enable
       this configure option, they will be installed.  You don't
       really need these demos to be installed.

--enable-warnings: if you define this, the compiler will display more
       warnings.  This won't have an effect on how the library
       is actually built.

--enable-hardening: this enables some stack protection features and some
       tests I like to use when developing.  This might be generally
       useful, depending on your distro and compiler.

For an explanation of the copying restrictions for this package, see
COPYING.LESSER.
